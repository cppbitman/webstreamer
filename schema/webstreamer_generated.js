// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var webstreamer = webstreamer || {};

/**
 * @const
 * @namespace
 */
webstreamer.livestreamer = webstreamer.livestreamer || {};

/**
 * @enum
 */
webstreamer.Any = {
  NONE: 0,
  webstreamer_Topic: 1,
  webstreamer_Subscription: 2,
  webstreamer_livestreamer_Create: 3,
  webstreamer_livestreamer_Destroy: 4,
  webstreamer_livestreamer_AddViewer: 5,
  webstreamer_livestreamer_RemoveViewer: 6
};

/**
 * @constructor
 */
webstreamer.root = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {webstreamer.root}
 */
webstreamer.root.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {webstreamer.root=} obj
 * @returns {webstreamer.root}
 */
webstreamer.root.getRootAsroot = function(bb, obj) {
  return (obj || new webstreamer.root).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {webstreamer.Any}
 */
webstreamer.root.prototype.anyType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {webstreamer.Any} */ (this.bb.readUint8(this.bb_pos + offset)) : webstreamer.Any.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
webstreamer.root.prototype.any = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
webstreamer.root.startroot = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {webstreamer.Any} anyType
 */
webstreamer.root.addAnyType = function(builder, anyType) {
  builder.addFieldInt8(0, anyType, webstreamer.Any.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} anyOffset
 */
webstreamer.root.addAny = function(builder, anyOffset) {
  builder.addFieldOffset(1, anyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
webstreamer.root.endroot = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
webstreamer.root.finishrootBuffer = function(builder, offset) {
  builder.finish(offset);
};

// Exports for Node.js and RequireJS
this.webstreamer = webstreamer;
